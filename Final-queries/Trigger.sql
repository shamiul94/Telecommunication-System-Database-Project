---------------------- User e input dile SIM Table e jabe-----------------------------

CREATE OR REPLACE TRIGGER USER_DATA_AFTER_INSERT
AFTER INSERT 
ON USER_DATA
FOR EACH ROW 
DECLARE 
V_PHONE_NO VARCHAR2(100); 
V_NID_NO NUMBER ; 
V_TYPE_ID NUMBER ; 
V_ISSUE_DATE TIMESTAMP; 
V_ISSUED_BY varchar2(100);

BEGIN 
V_NID_NO := :NEW.NID_NO ; 
V_ISSUE_DATE := SYSDATE ; 

SELECT P.SIM_TYPE_ID INTO V_TYPE_ID
FROM PENDING_SIM_REQ P
WHERE P.NID_NO = V_NID_NO ; 

SELECT P.ISSUED_BY INTO V_ISSUED_BY
FROM PENDING_SIM_REQ P
WHERE P.NID_NO = V_NID_NO ; 



IF V_TYPE_ID = 1 THEN 

SELECT APRE.SIM_NO INTO V_PHONE_NO
FROM AVAILABLE_PREPAID_SIM APRE
WHERE ROWNUM = 1 ; 

DELETE FROM AVAILABLE_PREPAID_SIM 
WHERE SIM_NO = V_PHONE_NO ; 

ELSIF V_TYPE_ID = 2 THEN 

SELECT  APOST.SIM_NO INTO V_PHONE_NO
FROM AVAILABLE_POSTPAID_SIM APOST
WHERE  ROWNUM = 1 ; 

DELETE FROM AVAILABLE_POSTPAID_SIM 
WHERE SIM_NO = V_PHONE_NO  ; 

END IF ;

INSERT INTO SIM (PHONE_NO,NID_NO,TYPE_ID,ISSUE_DATE,ISSUED_BY) VALUES (V_PHONE_NO,V_NID_NO,V_TYPE_ID,V_ISSUE_DATE,V_ISSUED_BY);

END;
/
--------------------User e input dile SIM Table e jabe end-------------------------------------

--------------------SIM e input dile prepaid postpaid table e jabe + POSTPAID BILL E JABE start-------------------------------------
CREATE OR REPLACE TRIGGER SIM_TO_PRE_POSTPAID
AFTER INSERT 
ON SIM 
FOR EACH ROW 

DECLARE 
V_SIM_NO VARCHAR2(100) ; 
V_CALL_DURATION NUMBER ; 
V_MSG NUMBER ; 
V_NET NUMBER ; 
V_BALANCE NUMBER ; 
V_TYPE NUMBER ; 
V_BILL_ID NUMBER ; 

BEGIN 
V_SIM_NO := :NEW.PHONE_NO; 
V_CALL_DURATION := 0 ; 
V_MSG := 0 ; 
V_NET := 0 ; 
V_BALANCE := 100 ; 
 

V_TYPE := :NEW.TYPE_ID ; 



IF V_TYPE = 1 THEN 

      INSERT INTO PREPAID_SIM (SIM_NO,TOTAL_CALL_DURATION ,TOTAL_MESSAGE_SENT,TOTAL_INTERNET_USAGE,BALANCE) VALUES (V_SIM_NO,V_CALL_DURATION,V_MSG,V_NET,V_BALANCE);

ELSIF V_TYPE = 2 THEN 

      INSERT INTO POSTPAID_SIM(SIM_NO,TOTAL_CALL_DURATION ,TOTAL_MESSAGE_SENT,TOTAL_INTERNET_USAGE) VALUES (V_SIM_NO,V_CALL_DURATION,V_MSG,V_NET);
		
			SELECT COUNT(*) INTO V_BILL_ID 
			FROM POSTPAID_BILL; 

			V_BILL_ID := V_BILL_ID + 1 ; 

			INSERT INTO POSTPAID_BILL(BILL_ID, SIM_NO, CALL_BILL, SMS_BILL, INTERNET_BILL, TOTAL_COST,IS_PAID) VALUES(V_BILL_ID , V_SIM_NO , 0,0,0,0,'YES'); 

END IF; 

END; 
/ 


--------------------SIM e input dile prepaid postpaid table e jabe + POSTPAID BILL E JABE end-------------------------------------


--------------------NEW CALL KORLE PRE , BALANCE, POST SIM AR BILL TABLE E CHANGE ASHBE START------------------------------------
CREATE OR REPLACE TRIGGER CALL_TO_PRE_POSTPAID_SIM 
AFTER INSERT 
ON CALL_DATABASE 
FOR EACH ROW 

DECLARE 
V_DURATION NUMBER ; 
V_PACK NUMBER ; 
V_START_TIME NUMBER ; 
PACK_START_TIME NUMBER ; 
PACK_END_TIME NUMBER ; 
V_COST NUMBER ; 
THIS_CALL_COST NUMBER ; 
PER_CALL_COST NUMBER ; 
DEFAULT_CALL_COST NUMBER ;
V_SIM_TYPE NUMBER ;  
V_IS_EMPLOYEE VARCHAR2(100);

	
BEGIN 
V_DURATION := timestamp_diff( :NEW.STARTING_TIME, :NEW.ENDING_TIME); 

SELECT CURRENT_PACKAGE_ID INTO V_PACK 
FROM SIM 
WHERE PHONE_NO = :NEW.CALLER_NO;


V_START_TIME := TO_NUMBER(SUBSTR(TO_CHAR(:NEW.STARTING_TIME), 11,2)); 

SELECT START_TIME , END_TIME , CALL_COST INTO PACK_START_TIME , PACK_END_TIME , PER_CALL_COST
FROM  OFFER_PACKAGES 
WHERE PACK_ID = V_PACK ; 

SELECT CALL_COST INTO DEFAULT_CALL_COST
FROM OFFER_PACKAGES 
WHERE PACK_ID = 1 ; 

SELECT TYPE_ID INTO V_SIM_TYPE
FROM SIM 
WHERE PHONE_NO = :NEW.CALLER_NO ; 

IF V_START_TIME >= PACK_START_TIME AND V_START_TIME <= PACK_END_TIME THEN 
				THIS_CALL_COST := V_DURATION * PER_CALL_COST ; 
ELSE 
				THIS_CALL_COST := V_DURATION * DEFAULT_CALL_COST ;

END IF; 


SELECT U.IS_EMPLOYEE INTO V_IS_EMPLOYEE
FROM USER_DATA U 
JOIN SIM S
ON(S.PHONE_NO = :NEW.CALLER_NO AND S.NID_NO = U.NID_NO) ; 


IF(V_SIM_TYPE = 1) THEN 
				UPDATE PREPAID_SIM 
				SET 
				TOTAL_CALL_DURATION = (V_DURATION+TOTAL_CALL_DURATION) , 
				BALANCE = BALANCE - THIS_CALL_COST 
				WHERE SIM_NO = :NEW.CALLER_NO ; 

				

ELSIF (V_SIM_TYPE = 2 AND V_IS_EMPLOYEE = 'NO') THEN 
				UPDATE POSTPAID_SIM 
				SET TOTAL_CALL_DURATION = (V_DURATION+TOTAL_CALL_DURATION) 
				WHERE SIM_NO = :NEW.CALLER_NO ; 
				
				UPDATE POSTPAID_BILL 
				SET CALL_BILL = CALL_BILL + THIS_CALL_COST , 
				TOTAL_COST = TOTAL_COST + THIS_CALL_COST 
				WHERE SIM_NO = :NEW.CALLER_NO ; 
				
END IF ; 
END; 
/ 
--------------------NEW CALL KORLE PRE , BALANCE, POST SIM AR BILL TABLE E CHANGE ASHBE END------------------------------------

----------------------------------NEW SMS KORLE PRE , BALANCE, POST SIM AR BILL TABLE E CHANGE ASHBE START-------------------

CREATE OR REPLACE TRIGGER SMS_TO_PRE_POSTPAID_SIM 
AFTER INSERT 
ON SMS_DATABASE 
FOR EACH ROW 

DECLARE  
V_PACK NUMBER ; 
V_SENDING_TIME NUMBER ; 
PACK_START_TIME NUMBER ; 
PACK_END_TIME NUMBER ; 
V_COST NUMBER ; 
THIS_SMS_COST NUMBER ; 
PER_SMS_COST NUMBER ; 
DEFAULT_SMS_COST NUMBER ;
V_SIM_TYPE NUMBER ;  
V_IS_EMPLOYEE VARCHAR2(100); 

	
BEGIN 

SELECT CURRENT_PACKAGE_ID, TYPE_ID  INTO V_PACK , V_SIM_TYPE
FROM SIM 
WHERE PHONE_NO = :NEW.SENDER_NO;


V_SENDING_TIME := TO_NUMBER(SUBSTR(TO_CHAR(:NEW.SENDING_TIME), 11,2)); 

SELECT START_TIME , END_TIME , SMS_COST INTO PACK_START_TIME , PACK_END_TIME , PER_SMS_COST
FROM  OFFER_PACKAGES 
WHERE PACK_ID = V_PACK ; 

SELECT SMS_COST INTO DEFAULT_SMS_COST
FROM OFFER_PACKAGES 
WHERE PACK_ID = 1 ; 


IF V_SENDING_TIME >= PACK_START_TIME AND V_SENDING_TIME <= PACK_END_TIME THEN 
				THIS_SMS_COST :=  PER_SMS_COST ; 
ELSE 
				THIS_SMS_COST :=  DEFAULT_SMS_COST ;

END IF; 


SELECT U.IS_EMPLOYEE INTO V_IS_EMPLOYEE
FROM USER_DATA U 
JOIN SIM S
ON(S.PHONE_NO = :NEW.SENDER_NO AND S.NID_NO = U.NID_NO) ; 


IF(V_SIM_TYPE = 1) THEN 
				UPDATE PREPAID_SIM 
				SET 
				TOTAL_MESSAGE_SENT = TOTAL_MESSAGE_SENT + 1 , 
				BALANCE = BALANCE - THIS_SMS_COST 
				WHERE SIM_NO = :NEW.SENDER_NO ; 

ELSIF (V_SIM_TYPE = 2 AND V_IS_EMPLOYEE = 'NO') THEN 

				UPDATE POSTPAID_SIM 
				SET TOTAL_MESSAGE_SENT = TOTAL_MESSAGE_SENT + 1 
				WHERE SIM_NO = :NEW.SENDER_NO ; 
				
				UPDATE POSTPAID_BILL 
				SET SMS_BILL = SMS_BILL + THIS_SMS_COST , 
				TOTAL_COST = TOTAL_COST + THIS_SMS_COST 
				WHERE SIM_NO = :NEW.SENDER_NO  ; 
				
END IF ; 
END; 
/ 

----------------------------------NEW SMS KORLE PRE , BALANCE, POST SIM AR BILL TABLE E CHANGE ASHBE END-------------------

----------------------------- NEW NET USE KORLE PRE , BALANCE, POST SIM AR BILL TABLE E CHANGE ASHBE START-------------



CREATE OR REPLACE TRIGGER NET_TO_PRE_POSTPAID_SIM 
AFTER INSERT 
ON NET_USAGE_DATABASE
FOR EACH ROW 

DECLARE  
V_PACK NUMBER ; 
V_START_TIME NUMBER ; 
PACK_START_TIME NUMBER ; 
PACK_END_TIME NUMBER ; 
THIS_NET_COST NUMBER ; 
PER_NET_COST NUMBER ; 
DEFAULT_NET_COST NUMBER ; 
V_SIM_TYPE NUMBER ; 
THIS_SESSION_USED_NET NUMBER ; 
V_IS_EMPLOYEE VARCHAR2(100); 

	
BEGIN 

SELECT CURRENT_PACKAGE_ID, TYPE_ID  INTO V_PACK , V_SIM_TYPE
FROM SIM 
WHERE PHONE_NO = :NEW.SIM_NO ;


V_START_TIME := TO_NUMBER(SUBSTR(TO_CHAR(:NEW.USING_DATE), 11,2)); 

SELECT START_TIME , END_TIME , NET_COST INTO PACK_START_TIME , PACK_END_TIME , PER_NET_COST
FROM  OFFER_PACKAGES 
WHERE PACK_ID = V_PACK ; 

SELECT NET_COST INTO DEFAULT_NET_COST
FROM OFFER_PACKAGES 
WHERE PACK_ID = 1 ; 

THIS_SESSION_USED_NET := :NEW.USED_KB ; 

IF V_START_TIME >= PACK_START_TIME AND V_START_TIME <= PACK_END_TIME THEN 
				THIS_NET_COST :=  PER_NET_COST * THIS_SESSION_USED_NET ; 
ELSE 
				THIS_NET_COST :=  DEFAULT_NET_COST * THIS_SESSION_USED_NET ;

END IF; 

SELECT U.IS_EMPLOYEE INTO V_IS_EMPLOYEE
FROM USER_DATA U 
JOIN SIM S
ON(S.PHONE_NO = :NEW.SIM_NO AND S.NID_NO = U.NID_NO) ; 

IF(V_SIM_TYPE = 1) THEN 
				UPDATE PREPAID_SIM 
				SET 
				TOTAL_INTERNET_USAGE = TOTAL_INTERNET_USAGE + THIS_SESSION_USED_NET , 
				BALANCE = BALANCE -  THIS_NET_COST  
				WHERE SIM_NO = :NEW.SIM_NO ; 

ELSIF (V_SIM_TYPE = 2 AND V_IS_EMPLOYEE = 'NO') THEN 

				UPDATE POSTPAID_SIM 
				SET 
				TOTAL_INTERNET_USAGE = TOTAL_INTERNET_USAGE + THIS_SESSION_USED_NET 
				WHERE SIM_NO = :NEW.SIM_NO ; 
				
				UPDATE POSTPAID_BILL 
				SET 
				INTERNET_BILL = INTERNET_BILL + THIS_NET_COST , 
				TOTAL_COST = TOTAL_COST + THIS_NET_COST 
				WHERE SIM_NO = :NEW.SIM_NO  ; 
				
END IF ; 
END; 
/ 
-------------------------- NEW NET USE KORLE PRE , BALANCE, POST SIM AR BILL TABLE E CHANGE ASHBE END----------------------
