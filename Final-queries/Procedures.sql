---------------------------------recharge procedure-----------------------
CREATE OR REPLACE PROCEDURE GENERATE_RECHARGE_CARDS IS
		I NUMBER ; 
	R NUMBER ; 
VAL NUMBER ; 
BEGIN 
		I := 1 ; 
		LOOP
			
			R := MOD(I , 5) ; 

IF(R = 1) THEN 
VAL := 20 ; 
ELSIF(R=2) THEN 
VAL := 50 ; 
ELSIF (R=3) THEN 
VAL := 100 ; 
ELSIF R = 4 THEN 
VAL := 200 ; 
END IF ; 
			
			INSERT INTO AVAILABLE_RECHARGE_CARDS(CARD_NUMBER , COST) VALUES((FLOOR(dbms_random.value(11111111,55555555))) , VAL); 
			I := I+1 ; 
		EXIT WHEN(I>1000) ;
END LOOP ; 
END; 
/ 
---------------------------generate recharge procedure-----------------------
CREATE OR REPLACE PROCEDURE GENERATE_PASSWORD IS
		I NUMBER ; 
BEGIN 
		I := 1 ; 
		LOOP
			INSERT INTO PASSWORDS(USER_PASSWORD) VALUES(TO_CHAR(dbms_random.string('X', 5))); 
			I := I+1 ; 
		EXIT WHEN(I>1000) ;
END LOOP ; 
END; 
/

------------------------generate password---------------------------------

CREATE OR REPLACE PROCEDURE GENERATE_PREPAID_NUM IS
		I NUMBER ; 
BEGIN 
		I := 1 ; 
		LOOP
			INSERT INTO AVAILABLE_PREPAID_SIM(SIM_NO) VALUES('019' || TO_CHAR(FLOOR(dbms_random.value(11111111,55555555)))); 
			I := I+1 ; 
		EXIT WHEN(I>1000) ;
END LOOP ; 
END; 
/ 
-----------------------GENERATE AVAILABLE PREPAID NO___________________

CREATE OR REPLACE PROCEDURE GENERATE_POSTPAID_NUM IS
		I NUMBER ; 
BEGIN 
		I := 1 ; 
		LOOP
			INSERT INTO AVAILABLE_POSTPAID_SIM(SIM_NO) VALUES('019' || TO_CHAR(FLOOR(dbms_random.value(66666666,99999999)))); 
			I := I+1 ; 
		EXIT WHEN(I>1000) ;
END LOOP ; 
END; 
/ 

-----------------------GENERATE AVAILABLE POSTPAID NO_____________________

--------------------------AFTER APPROVING THIS SIM----------------------------

CREATE OR REPLACE PROCEDURE APPROVE_THIS_PENDING_SIM(ISSUER_EMPLOYEE_ID IN NUMBER, NEW_USER_NID_NO IN NUMBER)
IS 
V_NAME VARCHAR2(100); 
V_NID NUMBER; 
V_bDATE VARCHAR2(100); 
V_FATHER VARCHAR2(100); 
V_MOTHER VARCHAR2(100); 
V_EMAIL VARCHAR2(100) ; 
V_STREET VARCHAR2(100); 
V_CITY VARCHAR2(100); 
V_ISEMP VARCHAR2(100); 
V_SIM_TYPE NUMBER ; 
NEW_PASSWORD VARCHAR2(100); 
DOES_EXIST NUMBER ; 
V_PHONE_NO VARCHAR2(100); 
V_ISSUE_DATE VARCHAR2(255) ; 

BEGIN 

SELECT 
USER_NAME , NID_NO , DATE_OF_BIRTH , NAME_OF_FATHER , NAME_OF_MOTHER , EMAIL, STREET_ADDRESS, 
CITY , IS_EMPLOYEE , SIM_TYPE_ID 
INTO V_NAME , V_NID ,V_bDATE ,V_FATHER,V_MOTHER, V_EMAIL, V_STREET, V_CITY , V_ISEMP ,V_SIM_TYPE
FROM PENDING_SIM_REQ 
WHERE NID_NO = NEW_USER_NID_NO ; 

UPDATE PENDING_SIM_REQ 
SET 
ISSUED_BY = ISSUER_EMPLOYEE_ID 
WHERE NID_NO = NEW_USER_NID_NO ; 

SELECT USER_PASSWORD INTO NEW_PASSWORD 
FROM PASSWORDS 
WHERE ROWNUM = 1 ; 

DELETE FROM PASSWORDS  
WHERE USER_PASSWORD = NEW_PASSWORD ; 

SELECT COUNT(*) INTO DOES_EXIST 
FROM USER_DATA 
WHERE NID_NO = V_NID ; 

IF DOES_EXIST = 0 THEN 
INSERT INTO USER_DATA VALUES(V_NAME, V_NID,V_bDATE,V_FATHER,V_MOTHER,V_EMAIL,V_STREET,V_CITY,V_ISEMP,NEW_PASSWORD); 

ELSE 


IF V_SIM_TYPE = 1 THEN 

SELECT APRE.SIM_NO INTO V_PHONE_NO
FROM AVAILABLE_PREPAID_SIM APRE
WHERE ROWNUM = 1 ; 

DELETE FROM AVAILABLE_PREPAID_SIM 
WHERE SIM_NO = V_PHONE_NO ; 

ELSIF V_SIM_TYPE  = 2 THEN 

SELECT  APOST.SIM_NO INTO V_PHONE_NO
FROM AVAILABLE_POSTPAID_SIM APOST
WHERE  ROWNUM = 1 ; 

DELETE FROM AVAILABLE_POSTPAID_SIM 
WHERE SIM_NO = V_PHONE_NO  ; 

END IF ;

V_ISSUE_DATE := TO_CHAR(SYSDATE); 
INSERT INTO SIM  VALUES (V_PHONE_NO,V_NID,V_SIM_TYPE,V_ISSUE_DATE,TO_CHAR(ISSUER_EMPLOYEE_ID), 1);

END IF ; 

DELETE FROM PENDING_SIM_REQ 
WHERE NID_NO = V_NID ; 

END; 
/  
---------------------------------------AFTER APPROVING THIS SIM-----------------------------------------------


---------------------------------------AFTER APPROVING THIS JOB-----------------------------------------------

CREATE OR REPLACE 
PROCEDURE APPROVE_THIS_PENDING_JOB_REQ(ISSUER_EMPLOYEE_ID IN NUMBER, NEW_APPLICANT_NID_NO IN NUMBER , NEW_EMP_SALARY IN NUMBER)
IS

V_EMP_NAME VARCHAR2(100) ;
V_FATHER_NAME VARCHAR2(100);
V_MOTHER_NAME VARCHAR2(100);
V_BIRTH_DATE VARCHAR2(100);
V_STREET_ADDRESS VARCHAR2(100);
V_CITY VARCHAR2(100);
V_NID_NO NUMBER;
V_EMAIL VARCHAR2(100);
V_ACC_NO NUMBER;
V_SSC_YEAR NUMBER;
V_SSC_GPA NUMBER;
V_HSC_YEAR NUMBER;
V_HSC_GPA NUMBER;
V_UNIVERSITY VARCHAR2(100);
V_CGPA NUMBER;
V_EXPERIENCE VARCHAR2(100);
V_JOB_ID NUMBER;
V_ISSUED_BY NUMBER;
V_HIRE_DATE TIMESTAMP;
V_SALARY NUMBER;
NEW_PASSWORD VARCHAR2(100) ;
ALREADY_EMP_NO NUMBER ;
NEW_EMP_ID NUMBER ;
V_PHONE_NO VARCHAR2(100) ;
DOES_EXIST NUMBER ;

BEGIN

SELECT
EMP_NAME , FATHER_NAME , MOTHER_NAME , BIRTH_DATE , STREET_ADDRESS , CITY , NID_NO ,
EMAIL , ACC_NO , SSC_YEAR , SSC_GPA , HSC_YEAR , HSC_GPA , UNIVERSITY , CGPA , EXPERIENCE ,
JOB_ID
INTO V_EMP_NAME , V_FATHER_NAME , V_MOTHER_NAME , V_BIRTH_DATE , V_STREET_ADDRESS , V_CITY ,V_NID_NO ,
V_EMAIL ,V_ACC_NO ,V_SSC_YEAR ,V_SSC_GPA ,V_HSC_YEAR ,V_HSC_GPA ,V_UNIVERSITY ,V_CGPA ,V_EXPERIENCE ,
V_JOB_ID
FROM PENDING_JOB_REQ
WHERE NID_NO = NEW_APPLICANT_NID_NO ;


UPDATE PENDING_JOB_REQ
SET
ISSUED_BY = ISSUER_EMPLOYEE_ID
WHERE NID_NO = NEW_APPLICANT_NID_NO ;

UPDATE PENDING_JOB_REQ
SET
HIRE_DATE = SYSDATE
WHERE NID_NO = NEW_APPLICANT_NID_NO ;

UPDATE PENDING_JOB_REQ
SET
SALARY = NEW_EMP_SALARY
WHERE NID_NO = NEW_APPLICANT_NID_NO ;


SELECT
HIRE_DATE
INTO V_HIRE_DATE
FROM PENDING_JOB_REQ
WHERE NID_NO = NEW_APPLICANT_NID_NO ;

V_ISSUED_BY := ISSUER_EMPLOYEE_ID ;
V_SALARY := NEW_EMP_SALARY ;


SELECT USER_PASSWORD INTO NEW_PASSWORD
FROM PASSWORDS
WHERE ROWNUM = 1 ;

DELETE FROM PASSWORDS
WHERE USER_PASSWORD = NEW_PASSWORD ;

SELECT COUNT(*) INTO DOES_EXIST
FROM USER_DATA
WHERE NID_NO = V_NID_NO ;

SELECT COUNT(*) INTO ALREADY_EMP_NO
FROM EMPLOYEES ;

NEW_EMP_ID := ALREADY_EMP_NO + 101 ;

DBMS_OUTPUT.PUT_LINE( V_EMP_NAME || ' ' || V_NID_NO|| ' ' ||V_BIRTH_DATE|| ' ' ||V_FATHER_NAME|| ' ' ||
V_MOTHER_NAME|| ' ' ||V_STREET_ADDRESS|| ' ' ||
V_CITY|| ' ' || 'YES'|| ' ' || NEW_PASSWORD);


INSERT INTO PENDING_SIM_REQ
VALUES(V_EMP_NAME , V_NID_NO , V_BIRTH_DATE , V_FATHER_NAME , V_MOTHER_NAME , V_EMAIL, V_STREET_ADDRESS , V_CITY , 'YES' , 2 , ISSUER_EMPLOYEE_ID) ;

IF DOES_EXIST = 0 THEN


INSERT INTO USER_DATA
VALUES (V_EMP_NAME, V_NID_NO,V_BIRTH_DATE,V_FATHER_NAME,V_MOTHER_NAME,V_EMAIL, V_STREET_ADDRESS,
V_CITY, 'YES', NEW_PASSWORD) ;

INSERT INTO EMPLOYEES
VALUES (NEW_EMP_ID , V_EMP_NAME, V_NID_NO,V_EMAIL,V_ACC_NO,V_HIRE_DATE,V_SSC_YEAR,
V_SSC_GPA,V_HSC_YEAR,V_HSC_GPA,V_UNIVERSITY,V_CGPA,V_EXPERIENCE,
V_JOB_ID, NEW_EMP_SALARY) ;

ELSE

INSERT INTO EMPLOYEES
VALUES (NEW_EMP_ID , V_EMP_NAME, V_NID_NO,V_EMAIL,V_ACC_NO,V_HIRE_DATE,V_SSC_YEAR,
V_SSC_GPA,V_HSC_YEAR,V_HSC_GPA,V_UNIVERSITY,V_CGPA,V_EXPERIENCE,
V_JOB_ID, NEW_EMP_SALARY) ;

SELECT  APOST.SIM_NO INTO V_PHONE_NO
FROM AVAILABLE_POSTPAID_SIM APOST
WHERE  ROWNUM = 1 ;

DELETE FROM AVAILABLE_POSTPAID_SIM
WHERE SIM_NO = V_PHONE_NO ;


INSERT INTO SIM  VALUES (V_PHONE_NO,V_NID_NO,2,V_HIRE_DATE,ISSUER_EMPLOYEE_ID, 1);

END IF ;

INSERT INTO PAYSLIP(EMPLOYEE_ID, PAYSLIP_ID, TOTAL_SALARY) VALUES( ALREADY_EMP_NO + 1001 , NEW_EMP_ID , NEW_EMP_SALARY) ; 

DELETE FROM PENDING_JOB_REQ
WHERE NID_NO = V_NID_NO ;

DELETE FROM PENDING_SIM_REQ
WHERE NID_NO = V_NID_NO ;

END;
/ 
---------------------------------------AFTER APPROVING THIS JOB-----------------------------------------------


-------------------------MAKE A CALL PROCEDURE ---------------------------- 
CREATE OR REPLACE PROCEDURE MAKE_A_CALL
(CALLER_NUM IN VARCHAR2 , RECEIVER_NUM IN VARCHAR2, START_TIME IN VARCHAR2, END_TIME IN VARCHAR2) 
IS 
V_ID NUMBER ; 
V_START TIMESTAMP ; 
V_END TIMESTAMP ; 

BEGIN 

SELECT COUNT(*) INTO V_ID 
FROM CALL_DATABASE ; 

V_ID := V_ID + 1 ; 

V_START := TO_DATE(START_TIME,'yyyy/mm/dd hh24:mi:ss') ; 
V_END := TO_DATE(END_TIME,'yyyy/mm/dd hh24:mi:ss') ; 

INSERT INTO CALL_DATABASE VALUES(V_ID , CALLER_NUM , RECEIVER_NUM , V_START , V_END) ; 

END; 
/ 

--------------------------- MAKE A CALL PROCEDURE END -------------------------------


--------------------------- SEND SMS PROCEDURE START -------------------------------

CREATE OR REPLACE PROCEDURE SEND_AN_SMS
(SENDER_NUM IN VARCHAR2 , RECEIVER_NUM IN VARCHAR2, SEND_TIME IN VARCHAR2) 
IS 
V_ID NUMBER ; 
V_SEND TIMESTAMP ; 

BEGIN 

SELECT COUNT(*) INTO V_ID 
FROM SMS_DATABASE ; 

V_ID := V_ID + 1 ; 

V_SEND := TO_DATE(SEND_TIME,'yyyy/mm/dd hh24:mi:ss') ; 

INSERT INTO SMS_DATABASE VALUES(V_ID , SENDER_NUM , RECEIVER_NUM , V_SEND) ; 

END; 
/ 
----------------------------- SEND SMS PROCEDURE END -----------------------


------------------------ recharge proce------------ 
CREATE OR REPLACE PROCEDURE RECHARGE_PROCEDURE (CARD_NO IN NUMBER , PHONE_NO IN VARCHAR2)
IS 
V_COST NUMBER ; 
BEGIN 
SELECT COST INTO V_COST 
FROM AVAILABLE_RECHARGE_CARDS 
WHERE CARD_NUMBER = CARD_NO ; 

DELETE FROM AVAILABLE_RECHARGE_CARDS 
WHERE CARD_NUMBER = CARD_NO ; 

UPDATE PREPAID_SIM 
SET BALANCE = (BALANCE + V_COST) 
WHERE (SIM_NO = PHONE_NO) ; 

INSERT INTO EARNING_FROM_RECHARGE VALUES(V_COST) ; 

END; 
/ 
-------------------recharge proce--------------------

-------------------- use net procedure ---------------- 

CREATE OR REPLACE PROCEDURE USE_NET
(USER_NUM IN VARCHAR2 , USE_DATE VARCHAR2 , U_KB IN NUMBER) 
IS 
V_ID NUMBER ; 
V_USE TIMESTAMP ; 

BEGIN 

SELECT COUNT(*) INTO V_ID 
FROM NET_USAGE_DATABASE ; 

V_ID := V_ID + 1 ; 

V_USE := TO_DATE(USE_DATE ,'yyyy/mm/dd hh24:mi:ss') ; 

INSERT INTO NET_USAGE_DATABASE VALUES(V_ID , USER_NUM , V_USE ,U_KB) ; 

END; 
/ 

--------------------- recharge procedure---------------------
